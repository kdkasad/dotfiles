#!/bin/sh

# This script sets environment variables.
# It is intended to keep ~/.zprofile clean
# It is sourced by ~/.zprofile on login

## SET GENERAL VARIABLES ##

export TERMINAL='alacritty'
export EDITOR='nvim'
export BROWSER='brave'
export PAGER='less'

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# load secret environment configuration
test -r "${XDG_CONFIG_HOME:-$HOME/.config}/env_secret" \
	&& . "${XDG_CONFIG_HOME:-$HOME/.config}/env_secret"


## CONFIGURE PROGRAMS ##

# Fix some problems with VS Code
export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

# choose VA-API driver
export LIBVA_DRIVER_NAME='iHD'

# set bemenu(1) colors
export BEMENU_OPTS='-p "" --fn "monospace" -H 28 --tb "#343136" --nb "#343136" --fb "#343136" --hb "#7A9ED7" --hf "#343136" --nf "#E3E1E4" --tf "#E3E1E4" --ff "#E3E1E4"'

# don't print cows when using ansible
export ANSIBLE_NOCOWS=1

# enable colored output in gcc(1)
export CFLAGS='-fdiagnostics-color=auto'

# less(1) configuration
export LESS='-R -i'
export LESSOPEN='|lesspipe.sh %s'
export LESSHISTFILE='-'

# Java doesn't understand tiling wm's
export _JAVA_AWT_WM_NONREPARENTING=1
export AWT_TOOLKIT='MToolkit'

# JRE appearance settings
export _JAVA_OPTIONS='-Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dawt.useSystemAAFontSettings=on -Dsun.java2d.opengl=true'

# sudo askpass program
export SUDO_ASKPASS="$HOME/.local/bin/scripts/dmenupass"

# qt5 theme
export QT_QPA_PLATFORMTHEME=gtk2

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# icons for lf(1)
export LF_ICONS="\
di=ðŸ—€ :\
fi=ðŸ—Ž:\
ln=â›“:\
*.png=ðŸ–¼:\
*.ico=ðŸ–¼:\
*.jpg=ðŸ“¸:\
*.jpeg=ðŸ“¸:\
*.gif=ðŸ–¼:\
*.svg=ðŸ—º:\
*.xcf=ðŸ–Œ:\
*.html=ðŸŒŽ:\
*.xml=ðŸ“°:\
*.gpg=ðŸ”’:\
*.css=ðŸŽ¨:\
*.pdf=ðŸ“š:\
*.djvu=ðŸ“š:\
*.epub=ðŸ“š:\
*.csv=ðŸ““:\
*.xlsx=ðŸ““:\
*.mp3=ðŸŽµ:\
*.opus=ðŸŽµ:\
*.ogg=ðŸŽµ:\
*.m4a=ðŸŽµ:\
*.flac=ðŸŽ¼:\
*.mkv=ðŸŽ¥:\
*.mp4=ðŸŽ¥:\
*.webm=ðŸŽ¥:\
*.mpeg=ðŸŽ¥:\
*.avi=ðŸŽ¥:\
*.zip=ðŸ“¦:\
*.rar=ðŸ“¦:\
*.7z=ðŸ“¦:\
*.tar.gz=ðŸ“¦:\
*.iso=ðŸ“€:\
*.img=ðŸ“€:\
*.bib=ðŸŽ“:\
*.1=â„¹:\
*.nfo=â„¹:\
*.info=â„¹:\
*.log=ðŸ“™:\
"

# set runit service dir for vsv(1)
export SVDIR="/run/runit/service/"

# allow global per-user package installation for NPM
export npm_config_prefix="$HOME/.local"


## CLEAN ~ ##

# move ansible(1) config
export ANSIBLE_CONFIG="$XDG_CONFIG_HOME/ansible/ansible.cfg"

# move notmuch(1) config
export NOTMUCH_CONFIG="$XDG_CONFIG_HOME/notmuch/config"

# move nb(1) config
export NBRC_PATH="$XDG_CONFIG_HOME/nb/nbrc"

# move pass(1) directory
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"

# Move zsh config
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"

# Move xauthority out of home directory
#export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"

# directory for GnuPG data
export GNUPGHOME="$XDG_DATA_HOME/gnupg"

# ssh-agent socket location
export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/ssh-agent.socket"

# set email locations
export MAILDIR=~/.local/share/mail
export MSMTP_QUEUEDIR="$XDG_DATA_HOME/msmtp.queue"

# set default refer database (only works in compiledoc script)
export REFER_SOURCES="$HOME/documents/sources.refer"

# Move cargo directory
export CARGO_HOME="${XDG_DATA_HOME}/cargo"

# move inputrc for readline(3)
export INPUTRC="$XDG_CONFIG_HOME/inputrc"

# wget(1) config
export WGETRC="$XDG_CONFIG_HOME/wgetrc"

# tmux(1) temporary data
#export TMUX_TMPDIR="$XDG_RUNTIME_DIR/tmux"

# Android SDK
export ANDROID_SDK_HOME="$XDG_DATA_HOME/android"

# wine(1)
export WINEPREFIX="$XDG_DATA_HOME/wine"

# distcc(1)
export DISTCC_DIR="$XDG_DATA_HOME/distcc"

# weechat
export WEECHAT_HOME="$XDG_CONFIG_HOME/weechat"

# ccache(1)
export CCACHE_CONFIGPATH="$XDG_CONFIG_HOME/ccache/ccache.conf"


## CONFIGURE PATH ##

# include user's bin directory
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# include user's scripts directory
if [ -d "$HOME/.local/bin/scripts" ] ; then
	for dir in $(find -L "$HOME/.local/bin/scripts" -not -path "$HOME/.local/bin/scripts/statusbar*" -not -path "$HOME/.local/bin/scripts/cron-jobs*" -type d); do
		PATH="$dir:$PATH"
	done
fi

# include TinyTex utilities
if [ -d "$HOME/.local/bin/tinytex" ]; then
	PATH="$HOME/.local/bin/tinytex:$PATH"
fi

# include ccache utils
if [ -d /usr/lib/ccache/bin ] ; then
	PATH="/usr/lib/ccache/bin:$PATH"
fi
