#!/bin/zsh

alias -g  ll='ls -lh'
alias -g  la='ls -A'
alias -g lla='ls -lAh'
alias -g llA='ls -lah'
alias	   l='ls -CF1'

alias -g sl='sl | lolcat'

alias -g rm='rm -Iv'
alias -g cp='cp -iv'
alias -g mv='mv -iv'
alias -g ln='ln -iv'

# Directory creation shortcuts
alias -g mkd='mkdir -pv'
mkcd() {
	mkdir -pv "$@"
	cd "$1" || exit 1
}

# Make & install suckless utilities
alias suckmake='make clean && make install clean'

# Create makefile
alias genmk='cp ~/.config/templates/config.mk ~/.config/templates/Makefile -t ./ && vim config.mk && vim Makefile'

# Text editor
alias v="$EDITOR"
alias nv='v'
alias sv='sudo -e'
alias svim='sudo -e'

# Fuzzy search function
se() {
	[ -n "$@" ] \
		&& fopts="$@" \
		|| fopts="~/* ~/.local/bin/scripts ~/.config ~/.local/share ~/.local/src ~/.local/opt"
	f="$(find $fopts -type f 2>/dev/null | fzf --reverse --height=40% -i)"
	[ -z "$f" ] && return 1
	case "$SHELL" in
		*bash) history -s $EDITOR "$(echo "$f" | sed "s|$HOME|~|")" ;;
		*zsh) fc -AI
			  echo $EDITOR "$(echo "$f" | sed "s|$HOME|~|")" >> $HISTFILE
			  fc -R ;;
	esac
	$EDITOR "$f"
}
so() {
	[ -n "$@" ] \
		&& fopts="$@" \
		|| fopts="~/* ~/.local/bin/scripts ~/.config ~/.local/share ~/.local/src ~/.local/opt"
	f="$(find $fopts -type f 2>/dev/null | fzf --reverse --height=40% -i)"
	[ -z "$f" ] && return 1
	case "$SHELL" in
		*bash) history -s $EDITOR "$(echo "$f" | sed "s|$HOME|~|")" ;;
		*zsh) fc -AI
			  echo $EDITOR "$(echo "$f" | sed "s|$HOME|~|")" >> $HISTFILE
			  fc -R ;;
	esac
	xdg-open "$f"
}
sd() {
	[ -n "$@" ] \
		&& fopts="$@" \
		|| fopts="./* ~/* ~/.local/bin/scripts ~/.config ~/.local/share ~/.local/src ~/.local/opt"
	destdir="$(find $fopts -type d 2>/dev/null | fzf --reverse --height=40% -i)"
	[ $? -ne 0 ] && return 1
	cd "$destdir" \
	&& ls
	case "$SHELL" in
		*bash) history -s cd "$destdir" ;;
		*zsh) fc -AI
			  echo cd $destdir >> $HISTFILE
			  fc -R ;;
	esac
}
ser() {
	exe="$(find ~ -type f -perm -u=x 2>/dev/null | fzf --reverse --height=40% -i)"
	case "$SHELL" in
		*bash) history -s "$(echo "$exe" | sed "s|$HOME|~|")" ;;
		*zsh) fc -AI
			  echo "$(echo "$exe" | sed "s|$HOME|~|")" >> $HISTFILE
			  fc -R ;;
	esac
	"$exe"
}
sec() {
	file="$(find "$@" -type f -not -path '*/.*' 2>/dev/null | sed "s|$HOME|~|" | fzf --reverse --height=40% -i | sed "s|~|HOME|")"
	[ -z "$file" ] && return 1
	read '?'"command to run (use %s to insert filename): "
	eval "echo \"$file\" | xargs -d '\n' -I '%s' $(echo "$REPLY" | sed 's/%s/"%s"/g')"
	case "$SHELL" in
		*bash) history -s "$(echo $REPLY | sed "s|%s|\"$file\"|")" ;;
		*zsh) fc -AI
			  echo "$(echo $REPLY | sed "s|%s|\"$file\"|")" >> $HISTFILE
			  fc -R ;;
	esac
}
sech() {
	file="$(find "$@" -type f 2>/dev/null | sed "s|$HOME|~|" | fzf --reverse --height=40% -i | sed "s|~|HOME|")"
	[ -z "$file" ] && return 1
	read -p "command to run (use %s to insert filename): "
	eval "echo \"$file\" | xargs -d '\n' -I '%s' $(echo "$REPLY" | sed 's/%s/"%s"/g')"
	case "$SHELL" in
		*bash) history -s "$(echo $REPLY | sed "s|%s|\"$file\"|")" ;;
		*zsh) fc -AI
			  echo "$(echo $REPLY | sed "s|%s|\"$file\"|")" >> $HISTFILE
			  fc -R ;;
	esac
}
secd() {
	file="$(find "$@" -type d -not -path '*/.*' 2>/dev/null | sed "s|$HOME|~|" | fzf --reverse --height=40% -i | sed "s|~|HOME|")"
	[ -z "$file" ] && return 1
	read -p "command to run (use %s to insert filename): "
	eval "echo \"$file\" | xargs -d '\n' -I '%s' $(echo "$REPLY" | sed 's/%s/"%s"/g')"
	case "$SHELL" in
		*bash) history -s "$(echo $REPLY | sed "s|%s|\"$file\"|")" ;;
		*zsh) fc -AI
			  echo "$(echo $REPLY | sed "s|%s|\"$file\"|")" >> $HISTFILE
			  fc -R ;;
	esac
}
sechd() {
	file="$(find "$@" -type d 2>/dev/null | sed "s|$HOME|~|" | fzf --reverse --height=40% -i | sed "s|~|HOME|")"
	[ -z "$file" ] && return 1
	read -p "command to run (use %s to insert filename): "
	eval "echo \"$file\" | xargs -d '\n' -I '%s' $(echo "$REPLY" | sed 's/%s/"%s"/g')"
	case "$SHELL" in
		*bash) history -s "$(echo $REPLY | sed "s|%s|\"$file\"|")" ;;
		*zsh) fc -AI
			  echo "$(echo $REPLY | sed "s|%s|\"$file\"|")" >> $HISTFILE
			  fc -R ;;
	esac
}

# Transmission BitTorrent client
alias trc='transmission-remote-cli'
alias trd='transmission-daemon'

# Arduino CLI
alias acli='arduino-cli'

# Disable unwanted features in some programs:
alias wget='wget --hsts-file=~/.local/share/wget_hsts'

# Use pinfo(1) instead of info(1)
alias info='pinfo'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Shred and remove in one command
secrm() {
	shred "$@"
	rm "$@"
}

# quickly source shell config
alias sorc="source $ZDOTDIR/.zshrc"

alias scim=sc-im

# Map CapsLock to Escape
alias capsesc='setxkbmap -option caps:escape_shifted_capslock'

# quickly create executable scripts
mkscript() {
	touch "$@"
	chmod +x "$@"
	vim "$@"
}

alias ctime="date +'%A, %d %B %Y at %H:%M'"

# present using SENT
pres() {
	setsid sh -c "sent \"$@\" ; st" &
	exit
}

# set irssi data/config
alias irssi="irssi --config=$HOME/.config/irssi/config --home=$HOME/.local/share/irssi"

# youtube-dl is a long name
alias ytdl='youtube-dl'

# don't glob urls when using curl or mpv
alias curl='noglob curl'
alias mpv='noglob mpv'
alias youtube-dl='noglob youtube-dl'

# show progress in xz
xzip() {
	in="$1"
	shift
	pv "$in" | xz -z "$@" > "$in.xz"
}

alias gc='git commit'
alias gcm='git commit -m'

# use sxiv-rifle by default
alias -g sx=sxiv-rifle
